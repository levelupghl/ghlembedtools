{"version":3,"file":"queryParams.min.js","sources":["../../src/js/lib/debounce.ts","../../src/js/lib/utils.ts","../../src/js/lib/supports.ts","../../src/js/queryParams.ts"],"sourcesContent":["export function debounce(func: () => void, wait: number): () => void {\n  let timeout: number | undefined\n  return function executedFunction(): void {\n    const later = (): void => {\n      clearTimeout(timeout)\n      func()\n    }\n    clearTimeout(timeout)\n    timeout = window.setTimeout(later, wait)\n  }\n}\n","export function addQueryParam(\n  url: string,\n  paramName: string,\n  paramValue: string\n): string {\n  try {\n    // Create a URL object from the given string\n    const urlObj = new URL(url)\n\n    // Set the query parameter\n    urlObj.searchParams.set(paramName, paramValue)\n\n    // Return the updated URL string\n    return urlObj.toString()\n  } catch (error) {\n    // Handle potential errors, such as invalid URL format\n    console.error(\"Provided string is not a valid URL:\", error)\n    // Return the original url\n    return url\n  }\n}\n\nexport function getQueryParams(\n  url_or_search: string | null = null\n): Record<string, string> {\n  let search: string\n  if (url_or_search) {\n    search = url_or_search.startsWith(\"?\")\n      ? url_or_search\n      : new URL(url_or_search).search\n  } else {\n    search = window.location.search || new URL(window.location.href).search\n  }\n  const params = new URLSearchParams(search)\n  const queryParams: Record<string, string> = {}\n  params.forEach((value, key) => {\n    queryParams[key] = value\n  })\n  return queryParams\n}\n\n// Merge and array of objects into a single object\nexport function mergeObjects(\n  objects: Record<string, any>[]\n): Record<string, any> {\n  const result: Record<string, any> = {}\n  // Iterate through each object in the array\n  objects.forEach((obj) => {\n    // Iterate through each key in the current object\n    for (const key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        // Assign/overwrite the property in the result object\n        result[key] = obj[key]\n      }\n    }\n  })\n  return result\n}\n","export function hasLocalStorage() {\n  try {\n    const t = \"__storage_test__\"\n    const store = window.localStorage\n    store.setItem(t, t)\n    const v = store.getItem(t)\n    store.removeItem(t)\n    return t === v\n  } catch {\n    return false\n  }\n}\n","import { debounce } from \"./lib/debounce\"\nimport { getQueryParams, mergeObjects } from \"./lib/utils\"\nimport { hasLocalStorage } from \"./lib/supports\"\n\nconst DEBUG = false\nconst iframeSelector = \"iframe:not([data-embed-tools-init])\"\nconst iframesList: Array<IFrame> = []\nconst search_cache = window.location.search\nconst SUPPORTS_LOCALSTORAGE = hasLocalStorage()\n// GHL iframe urls to match; see form_embed line 838\nconst GHL_EMBED_SRCS = [\"/form\", \"/survey\", \"/booking\", \"/group\"]\nlet send_queue: Array<object> = []\n\nconst embedTools = {\n  debug: DEBUG,\n  sendQueryParams,\n}\n\nexport interface CustomWindow extends Window {\n  levelup: {\n    debug: boolean\n    sendQueryParams: any\n  }\n}\ndeclare let window: CustomWindow\n\ninterface IFrame extends HTMLIFrameElement {\n  dataset: {\n    embedToolsInit?: string\n    embedToolsLocationId?: string\n    src?: string\n    layoutIframeId?: string\n  }\n}\n\nexport function sendQueryParams(params: object, iframe: IFrame | null = null) {\n  _sendQueryParams(params, iframe)\n  send_queue.push(params)\n}\n\nfunction _sendQueryParams(params: object, iframe: IFrame | null = null) {\n  if (iframe) {\n    postQueryParams(iframe, params)\n  } else {\n    iframesList.forEach((iframe) => {\n      postQueryParams(iframe, params)\n    })\n  }\n}\n\n\nfunction postQueryParams(iframe: IFrame, params: object) {\n  const url = new URL(document.location.href)\n  const locationId = iframe.dataset.embedToolsLocationId\n  const cached_session = getCachedSession(locationId)\n  const referrer = cached_session ? cached_session.referrer : document.referrer\n  const id = iframe.dataset?.layoutIframeId || iframe.id\n  iframe.contentWindow?.postMessage(\n    [\"query-params\", params, url.toString(), referrer, id],\n    \"*\"\n  )\n}\n\n// From form_embed.js [line 512]\nfunction getCachedSession(locationId: string | undefined) {\n  if (!SUPPORTS_LOCALSTORAGE || !locationId) {\n    return\n  }\n  const key = `v3_first_session_event_${locationId}`\n  try {\n    const value = localStorage.getItem(key)\n    if (!value) {\n      return null\n    }\n    const data = JSON.parse(value)\n    return new Date().getTime() > data.expiry\n      ? (localStorage.removeItem(key), null)\n      : data.value\n  } catch (err) {\n    return null\n  }\n}\n\nfunction getIframeByEventSource(\n  source: MessageEventSource | null\n): IFrame | void {\n  if (!source) return\n  const iframes = Array.from(document.getElementsByTagName(\"iframe\"))\n  for (let item of iframes) {\n    if (item.contentWindow === source) {\n      return item\n    }\n  }\n}\n\n// Listen for fetch-query-params messages\nfunction processIframeMessage(evt: MessageEvent) {\n  if (embedTools.debug) {\n    console.log(\"[EMBEDTOOLS] received message:\", evt, evt.data)\n  }\n  const data = evt.data\n  if (typeof data === \"object\" && data[0] === \"fetch-query-params\") {\n    const iframe = getIframeByEventSource(evt.source)\n    if (iframe) {\n      // Cache location ID on the iframe; needed for later postMessage\n      iframe.dataset.embedToolsLocationId = data[2]\n    }\n    // Use the current location.search or default to cache if the search params happened to have been removed from url\n    const search =\n      window.location.search.length > 1 ? window.location.search : search_cache\n    let params = getQueryParams(search)\n\n    // Add any params that were previously queued up\n    if (send_queue && send_queue.length) {\n      params = mergeObjects([params, ...send_queue])\n    }\n\n    // Set a timeout to allow time for form_embed.js to send query params, then\n    // send our params that may contain custom params from window.levelup.sendQueryParams\n    setTimeout(() => {\n      _sendQueryParams(params, iframe || null)\n    }, 10)\n  }\n}\n\nfunction setupIframesAndObserve(document: Document): void {\n  const filterIframes = (iframe: IFrame): boolean => {\n    if (iframe.dataset.embedToolsInit) {\n      return false\n    }\n    // Some WP plugins like lazysizes removes iframe.src until the iframe is visible.\n    // Since GHL's form_embed.js only filters on src, we need support both src and dataset.src.\n    const src = iframe.src || iframe.dataset.src || \"\"\n    return GHL_EMBED_SRCS.some((r) => src.includes(r))\n  }\n\n  const initIframes = (): void => {\n    Array.from(document.querySelectorAll<IFrame>(iframeSelector))\n      .filter(filterIframes)\n      .forEach((iframe) => {\n        iframe.dataset.embedToolsInit = \"true\"\n        iframesList.push(iframe)\n      })\n  }\n\n  window.addEventListener(\"message\", processIframeMessage)\n\n  // Start by initializing any iframes already present\n  initIframes()\n\n  // Save any queued sendQueryParams\n  if (window.levelup?.sendQueryParams?.queue?.length) {\n    send_queue = window.levelup?.sendQueryParams?.queue\n  }\n\n  // Rerun initFrames anytime the DOM changes, but debounced every 50ms\n  const observer = new MutationObserver(debounce(initIframes, 50))\n  observer.observe(document.body, {\n    attributes: false,\n    childList: true,\n    subtree: true,\n  })\n}\n\nsetupIframesAndObserve(window.document)\n\n// Export sendQueryParams to window.levelup.sendQueryParams\nif (!window.levelup) {\n  window.levelup = embedTools\n} else {\n  window.levelup.debug ??= embedTools.debug\n  window.levelup.sendQueryParams ??= embedTools.sendQueryParams\n}\n\nconsole.log(`Powered by __theme_name__ __theme_version__:`, \"__theme_website__\")\n"],"names":["debounce","func","wait","timeout","later","getQueryParams","url_or_search","search","params","queryParams","value","key","mergeObjects","objects","result","obj","hasLocalStorage","t","store","v","e","_a","_c","DEBUG","iframeSelector","iframesList","search_cache","SUPPORTS_LOCALSTORAGE","GHL_EMBED_SRCS","send_queue","embedTools","sendQueryParams","iframe","_sendQueryParams","postQueryParams","_b","url","locationId","cached_session","getCachedSession","referrer","id","data","err","getIframeByEventSource","source","iframes","item","processIframeMessage","evt","setupIframesAndObserve","document","_d","_e","filterIframes","src","r","initIframes"],"mappings":"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"}